(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))n(r);new MutationObserver(r=>{for(const s of r)if(s.type==="childList")for(const a of s.addedNodes)a.tagName==="LINK"&&a.rel==="modulepreload"&&n(a)}).observe(document,{childList:!0,subtree:!0});function t(r){const s={};return r.integrity&&(s.integrity=r.integrity),r.referrerPolicy&&(s.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?s.credentials="include":r.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(r){if(r.ep)return;r.ep=!0;const s=t(r);fetch(r.href,s)}})();function c(o){return typeof o=="object"&&"field"in o&&"message"in o}async function i(o,e={}){try{const t=await fetch(o,e);if(!t.ok){const n=await t.json();throw Array.isArray(n)&&n.every(r=>c(r))?n:c(n)?[n]:[{field:"unknown",message:"Unknown error"}]}return t.status===200?await t.json():void 0}catch(t){throw t instanceof TypeError?[{field:"network",message:"Could not connect to service."}]:t instanceof SyntaxError?[{field:"internal",message:"Failed to parse the response body. The response may be empty or the route may not be returning JSON as expected."}]:t}}class f{constructor(e){this.apiUrl=e}async getAll(){return await i(`${this.apiUrl}`)}async insert(e){const t={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)};await i(`${this.apiUrl}`,t)}async update(e,t){const n={method:"PUT",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)};await i(`${this.apiUrl}/${e}`,n)}async delete(e){const t={method:"DELETE"};await i(`${this.apiUrl}/${e}`,t)}}function l(o,e){const t=o.querySelector(".error");t&&t.remove();const n=document.createElement("p");n.setAttribute("class","error"),n.innerText=e,o.insertBefore(n,o.firstChild)}function d(o,e){console.error(`${e.field}: ${e.message}`),e.field==="network"?l(o,"Could not connect to service :("):e.field==="internal"&&l(o,"Something went wrong when trying to use the service :(")}export{f as W,l as d,d as h,c as i};
